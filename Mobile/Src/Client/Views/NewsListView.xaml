<?xml version="1.0" encoding="utf-8" ?>

<ContentPage
    Shell.TabBarIsVisible="False"
    x:Class="Client.Views.NewsListView"
    x:DataType="vm:NewsListVM"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:converters="clr-namespace:Client.Converters"
    xmlns:models="clr-namespace:Shared.Contracts.Responses.News;assembly=Shared"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:vm="clr-namespace:Client.ViewModels"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml">
    <ContentPage.Resources>
        <converters:DateToLocalTimeConverter x:Key="DateToLocalTimeConverter" />
        <converters:BaseAddressImageConverter x:Key="BaseAddressImageConverter" />
        <DataTemplate x:DataType="models:NewsResponse" x:Key="NewsTemplate">
            <Grid
                Margin="0,10"
                RowDefinitions="200, 55, 80, 25,1"
                RowSpacing="5">
                <Border
                    BackgroundColor="{StaticResource Gray200}"
                    Stroke="{StaticResource Gray200}"
                    StrokeShape="RoundRectangle 10"
                    StrokeThickness="0">
                    <Grid>
                        <Image Aspect="AspectFill" Source="{Binding ImageTitleUrl, Converter={StaticResource BaseAddressImageConverter}}" />
                        <Label
                            FontAttributes="Bold"
                            FontSize="20"
                            HorizontalOptions="Center"
                            IsVisible="False"
                            Text="Нет картинки"
                            TextColor="{StaticResource White}"
                            VerticalOptions="Center">
                            <Label.Triggers>
                                <DataTrigger
                                    Binding="{Binding ImageTitleUrl}"
                                    TargetType="Label"
                                    Value="">
                                    <Setter Property="IsVisible" Value="True" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                    </Grid>
                </Border>
                <Label
                    FontAttributes="Bold"
                    FontSize="20"
                    Grid.Row="1"
                    LineBreakMode="TailTruncation"
                    MaxLines="2"
                    Text="{Binding Title}" />
                <Label
                    FontSize="14"
                    Grid.Row="2"
                    LineBreakMode="TailTruncation"
                    MaxLines="4"
                    Text="{Binding Content}" />
                <Grid ColumnDefinitions="*, 50, 50" Grid.Row="3">
                    <Label Text="{Binding Created, Converter={StaticResource DateToLocalTimeConverter}}" VerticalOptions="Center" />

                    <HorizontalStackLayout Grid.Column="1">
                        <Image Source="like.svg">
                            <Image.Triggers>
                                <DataTrigger
                                    Binding="{Binding IsLiked}"
                                    TargetType="Image"
                                    Value="True">
                                    <Setter Property="Source" Value="like_filled.svg" />
                                </DataTrigger>
                            </Image.Triggers>
                            <Image.Behaviors>
                                <toolkit:IconTintColorBehavior TintColor="{StaticResource Black}" />
                            </Image.Behaviors>
                        </Image>
                        <Label
                            Text="{Binding LikesCount}"
                            TextColor="{StaticResource Black}"
                            VerticalOptions="Center" />
                    </HorizontalStackLayout>
                    <HorizontalStackLayout Grid.Column="2">
                        <Image Source="views.svg">
                            <Image.Triggers>
                                <DataTrigger
                                    Binding="{Binding IsViewed}"
                                    TargetType="Image"
                                    Value="True">
                                    <Setter Property="Source" Value="views_filled.svg" />
                                </DataTrigger>
                            </Image.Triggers>
                            <Image.Behaviors>
                                <toolkit:IconTintColorBehavior TintColor="{StaticResource Black}" />
                            </Image.Behaviors>
                        </Image>
                        <Label
                            Text="{Binding ViewsCount}"
                            TextColor="{StaticResource Black}"
                            VerticalOptions="Center" />
                    </HorizontalStackLayout>
                </Grid>

                <Border BackgroundColor="{StaticResource Black}" Grid.Row="4" />
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type vm:NewsListVM}}, Path=GoToNewsDetailsViewCommand}" CommandParameter="{Binding ID}" />
                </Grid.GestureRecognizers>
            </Grid>
        </DataTemplate>
    </ContentPage.Resources>
    <Shell.TitleView>
        <Label
            FontAttributes="Bold"
            FontSize="24"
            Grid.ColumnSpan="2"
            LineBreakMode="NoWrap"
            Text="{Binding PageTitle}"
            TextColor="{StaticResource Primary}"
            VerticalOptions="Center" />
    </Shell.TitleView>
    <ContentPage.Behaviors>
        <toolkit:EventToCommandBehavior Command="{Binding AppearingViewCommand}" EventName="Appearing" />
        <toolkit:EventToCommandBehavior Command="{Binding DisappearingViewCommand}" EventName="Disappearing" />
    </ContentPage.Behaviors>
    <ContentPage.Content>

        <RefreshView Command="{Binding RefreshDataCommand}" IsRefreshing="{Binding IsBusy}">
            <ScrollView Padding="15,0">

                <VerticalStackLayout>
                    <ActivityIndicator IsRunning="True" IsVisible="{Binding IsBusy}" />
                    <CollectionView
                        IsVisible="True"
                        ItemTemplate="{StaticResource NewsTemplate}"
                        ItemsSource="{Binding NewsList}">
                        <CollectionView.Triggers>
                            <DataTrigger
                                Binding="{Binding NewsList.Count}"
                                TargetType="CollectionView"
                                Value="0">
                                <Setter Property="IsVisible" Value="False" />
                            </DataTrigger>
                        </CollectionView.Triggers>
                    </CollectionView>
                    <Label
                        FontAttributes="Bold"
                        FontSize="24"
                        HorizontalOptions="Center"
                        IsVisible="False"
                        Margin="0,40"
                        Text="Новости не найдены">
                        <Label.Triggers>
                            <DataTrigger
                                Binding="{Binding NewsList.Count}"
                                TargetType="Label"
                                Value="0">
                                <Setter Property="IsVisible" Value="True" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <Button
                        Command="{Binding GetNextDataCommand}"
                        IsVisible="{Binding IsCanGetNextData}"
                        Text="Показать ещё" />
                    <ActivityIndicator IsRunning="True" IsVisible="{Binding IsFooterLoading}" />
                    <BoxView BackgroundColor="Transparent" HeightRequest="50" />
                </VerticalStackLayout>

            </ScrollView>
        </RefreshView>

    </ContentPage.Content>
</ContentPage>